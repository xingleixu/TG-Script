// TG-Script 扩展类型兼容性测试

// ============================================================================
// 基本类型兼容性测试
// ============================================================================

// 整数类型之间的兼容性
let int8Val: int8 = 100;
let int16Val: int16 = 1000;
let int32Val: int32 = 100000;
let int64Val: int64 = 1000000;

// 浮点类型之间的兼容性
let float32Val: float32 = 3.14;
let float64Val: float64 = 3.141592653589793;

// 基本数值类型
let intVal: int = 42;
let floatVal: float = 3.14159;

// ============================================================================
// 算术运算兼容性测试
// ============================================================================

// 同类型运算
let int8Sum = int8Val + int8Val;
let int16Product = int16Val * int16Val;
let float32Division = float32Val / float32Val;
let float64Subtraction = float64Val - float64Val;

// ============================================================================
// 比较运算兼容性测试
// ============================================================================

// 同类型比较
let int8Compare = int8Val > 50;
let int16Compare = int16Val == 1000;
let float32Compare = float32Val < 4.0;
let float64Compare = float64Val >= 3.0;

// ============================================================================
// 函数参数兼容性测试
// ============================================================================

function processInt8(value: int8): int8 {
    return value * 2;
}

function processFloat32(value: float32): float32 {
    return value + 1.0;
}

// 调用函数 - 暂时注释掉，因为函数调用的类型检查还需要进一步完善
// let processedInt8 = processInt8(int8Val);
// let processedFloat32 = processFloat32(float32Val);

// ============================================================================
// 变量赋值兼容性测试
// ============================================================================

// 重新赋值相同类型
int8Val = 127;
int16Val = 32767;
float32Val = 2.718;
float64Val = 2.718281828459045;